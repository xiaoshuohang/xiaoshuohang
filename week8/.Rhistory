options(repos = c(RSM = "https://radiant-rstats.github.io/minicran", CRAN
= "https://cloud.r-project.org"))
install.packages("radiant")
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
mean(a)
typeof(a)
mean(x)
d<-vector()
d<-(1,2,3,4,5)
d<-c(1,2,3,4,5)
x[c(FALSE,FALSe,FALSE,FALSE,TRUE)]
x[c(FALSE,FALSE,FALSE,FALSE,TRUE)]
d[c(FALSE,FALSE,FALSE,FALSE,TRUE)]
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
read_csv("playlist_data.csv")
df = read_csv("playlist_data.csv")
df = read_csv("playlist_data.csv")
View(df)
df = read_csv("playlist_data.csv")
df
read_csv("playlist_data.csv")
read_csv("playlist_data.csv")
knitr::opts_chunk$set(echo = TRUE)
# Enter code
> x<-vector()
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics ("/Users/shuohangxiao/Desktop) ```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
# No output is required for this code
# Only the list of commands that execute the task mentioned in the question are required
read_csv("sales_data.csv")
# Enter code here
ages<-c(25,30,22,28,33)
student_info<-list(student_names,respective_scores,if_they_passed_the_exam)
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-(85,92,78)
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-(85,92,78)
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-c(85,92,78)
if_they_passed_the_exam<-c(TRUE,TRUE,FALSE)
student_info<-list(student_names,respective_scores,if_they_passed_the_exam)
# Enter code here
"data"<-c(10,15.5,"20",TRUE)
typeof("data")
[1] "character"
# Enter code here
"data"<-c(10,15.5,"20",TRUE)
"data"[c(TRUE,FALSE,FALSE,FALSE)]
typeof("data")
# Enter code here
prices<-c(20.5,15,"25")
typeof(prices)
prices<-as.double(prices)
typeof(prices)
"double"
x<-vector()
x<-c(5,10,15)
y<-vector()
y<-c("apple","banana","cherry")
z<-vector()
z<-c(x,y)
typeof(z)
"character"
The combination of the 2 vectors have changed the type of the whole variable type to character.
# Enter code here
"numbers"<-vector()
"numbers"<-c(7,12.5,"15.7")
sum("numbers")
# Enter code here
"numbers"<-vector()
"numbers"<-c(7,12.5,"15.7")
"numbers"<-as.numeric("numbers")
sum("numbers")
# Enter code here
numbers<-vector()
numbers<-c(7,12.5,"15.7")
numbers<-as.numeric(numbers)
sum(numbers)
R would not automatically handle the data type conversion
# Enter code here
data<-c(10,15.5,"20",TRUE)
data[c(TRUE,FALSE,FALSE,FALSE)]
typeof(data)
# Enter code here
data<-c(10,15.5,"20",TRUE)
typeof(data)
x=c(1,2,3,4,5)
x[2]
# Enter code here
data<-c(10,15.5,"20",TRUE)
typeof(data[1])
y=c(1,"A")
y
# Enter code here
data<-c(10,15.5,"20",TRUE)
typeof(data[1])
typeof(data[2])
# Enter code here
data<-c(10,15.5,"20",TRUE)
typeof(data[1])
typeof(data[2])
typrof(data[3])
# Enter code here
data<-c(10,15.5,"20",TRUE)
typeof(data[1])
typeof(data[2])
typeof(data[3])
# Enter code here
data<-c(10,15.5,"20",TRUE)
typeof(data[1])
typeof(data[2])
typeof(data[3])
typeof(data[4])
# Enter code here
grades<-c(85,90.5,"75.2")
mean(grades)
[1] NA
# Enter code here
grades<-c(85,90.5,"75.2")
mean(grades)
# Enter code here
grades<-c(85,90.5,"75.2")
grades<-as.numeric(grades)
mean(grades)
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
>How to calculate mean of a list?
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
[1] 20
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
mean(x)
# Enter code here
q<-c("apple","banana","cherry","apple")
# Enter code
mixed_data <- list(numeric_vector=c(10,20,30),
chr_vector=c("red","blue","green"),
log_vector=c(TRUE,FALSE,TRUE))
mixed_data$numeric_vector
# Enter code
mixed_data <- list(numeric_vector=c(10,20,30),
chr_vector=c("red","blue","green"),
log_vector=c(TRUE,FALSE,TRUE))
mean(mixed_data$numeric_vector)
# Enter code
mixed_data <- list(numeric_vector=c(10,20,30),
chr_vector=c("red","blue","green"),
log_vector=c(TRUE,FALSE,TRUE))
mean(numeric_vector)
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
mean(x)
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x,y,z)
mean(a$x)
# Enter code
x<-vector()
x<-c(10,20,30)
y<-vector()
y<-c("red","green","blue")
z<-c(TRUE,FALSE,TRUE)
a<-list(x=x,y=x,z=x)
mean(a$x)
# Enter code here
q<-c("apple","banana","cherry","apple")
which(q=="apple")
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-c(85,92,78)
if_they_passed_the_exam<-c(TRUE,TRUE,FALSE)
student_info<-list(names=student_names,score=respective_scores,results=if_they_passed_the_exam)
student_info$score
student_info$score[student_info$names=="Bob"]
student_info$score[student_info$names=="Bob"]
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-c(85,92,78)
if_they_passed_the_exam<-c(TRUE,TRUE,FALSE)
student_info<-list(names=student_names,score=respective_scores,results=if_they_passed_the_exam)
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-c(85,92,78)
if_they_passed_the_exam<-c(TRUE,TRUE,FALSE)
student_info<-list(names=student_names,score=respective_scores,results=if_they_passed_the_exam)
# Enter code here
student_names<-c("Alice","Bob","Catherine")
respective_scores<-c(85,92,78)
if_they_passed_the_exam<-c(TRUE,TRUE,FALSE)
student_info<-list(names=student_names,score=respective_scores,results=if_they_passed_the_exam)
student_info
student_info$score[student_info$names=="Bob"]
student_info$score[student_info$names=="Bob"]
# Enter code here
d<-rnorm(10)
vector_length<-length(d)
last_element<-d[vector_length]
print(last_element)
# Enter code here
ages<-c(12,22,32,42,52)
older_than_30<-ages[ages>30]
# Enter code here
ages<-c(12,22,32,42,52)
older_than_30<-ages[ages>30]
print(older_than_30)
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
print[4<x<8]
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
print[x<8]
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
y<-x[4:8]
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
y<-x[4:8]
y=
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
x[4:8]
# Enter code here
x<-c(1,2,3,4,5,6,7,8,9,10)
x[5:7]
# Enter code here
sequence <- 1:20
every_third_element <- sequence[seq(1, length(sequence), by = 3)]
print(every_third_element)
# Enter code here
z<-c(10,NA,15,20)
# Enter code here
temperatures<-(87,92,88,91,86,93)
# Enter code here
temperatures<-c(87,92,88,91,86,93)
temperatures[temperatures<90]
# Enter code here
temperatures<-c(87,92,88,91,86,93)
hot_days<-temperatures[temperatures<90]
# Enter code here
temperatures<-c(87,92,88,91,86,93)
hot_days<-temperatures[temperatures<90]
sum(hot_days)
# Enter code here
temperatures<-c(87,92,88,91,86,93)
hot_days<-temperatures[temperatures<90]
num(hot_days)
?is.na
# Enter code here
z<-c(10,NA,15,20)
is.na(z)
# Enter code here
temperatures<-c(87,92,88,91,86,93)
hot_days<-temperatures[temperatures<90]
length(hot_days)
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
print(long_names)
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
long_fruit_names <- fruits[long_names]
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
long_fruit_names <- fruits[long_names]
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
long_fruit_names <- fruits[long_names]
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
long_names
# Enter code here
fruits<-c("apples","strawberry","pineapple","kiwi","orange")
long_names<-nchar(fruits)>6
fruits[long_names]
x <-c(10,20,30)
x
x <- 10,20,30
# Enter code here
numbers<-c(10,7,22,35,45)
divisible_by_5 <- numbers %% 5 == 0
divisible_numbers <- numbers[divisible_by_5]
# Enter code here
numbers<-c(10,7,22,35,45)
divisible_by_5 <- numbers %% 5 == 0
divisible_numbers <- numbers[divisible_by_5]
print(divisible_numbers)
# Enter code here
vector1<-c(12,13,14,15,16)
vector2<_c(7,17,18,10,25)
# Enter code here
vector1<-c(12,13,14,15,16)
vector2<-c(7,17,18,10,25)
comparison <- vector1 > vector2
# Enter code here
vector1<-c(12,13,14,15,16)
vector2<-c(7,17,18,10,25)
comparison <- vector1 > vector2
print(comparison)
# Enter code here
ages<-c(25,30,22,28,33)
ages
# Enter code here
temperatures<-c(87,92,88,91,86,93)
hot_days<-temperatures[temperatures>90]
length(hot_days)
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
reverse_string <- function(input_string) {
reversed <- ""
for (i in nchar(input_string):1) {
reversed <- paste(reversed, substr(input_string, i, i), sep = "")
}
return(reversed)
}
word <- readline(prompt = "Enter a word: ")
reversed_word <- reverse_string(word)
cat("Reversed word: ", reversed_word, "\n")
# Enter code here
reverse_string <- function(input_string) {
reversed <- ""
for (i in nchar(input_string):1) {
reversed <- paste(reversed, substr(input_string, i, i), sep = "")
}
return(reversed)
}
word <- readline(prompt = "Enter a word: ")
reversed_word <- reverse_string("word")
cat("Reversed word: ", reversed_word, "\n")
# Enter code here
reverse_string <- function(input_string) {
reversed <- ""
for (i in nchar(input_string):1) {
reversed <- paste(reversed, substr(input_string, i, i), sep = "")
}
return(reversed)
}
word <- readline(prompt = "Enter a word: ")
reversed_word <- reverse_string(word)
cat("Reversed word: ", reversed_word, "\n")
# Enter code here
reverse_string <- function(input_string) {
reversed <- ""
for (i in nchar(input_string):1) {
reversed <- paste(reversed, substr(input_string, i, i), sep = "")
}
return(reversed)
}
#word <- readline(prompt = "Enter a word: ")
reversed_word <- reverse_string("hello")
cat("Reversed word: ", reversed_word, "\n")
knitr::opts_chunk$set(echo = TRUE)
install.packages(shiny)
install.packages(shiny)
library(shiny)
install.packages(shiny)
library(shiny)
runExample("02_text")
install.packages(shiny)
library(shiny)
runExample("11_timer")
install.packages(shiny)
library(shiny)
runExample("05_sliders")
install.packages(shiny)
library(shiny)
runExample("11_timer")
install.packages(shiny)
library(shiny)
runExample("11_timer")
runApp("R2")
> runApp("R2")
runApp("R2")
setwd("~/Desktop/NM2207/week8/week8 chanllenge")
runApp("R2")
runApp("R2")
runApp(app)
runApp("app")
setwd("~/Desktop/NM2207/week8/week8 chanllenge")
runApp("appname")
runApp(appname)
runApp("appname")
runApp('~/Desktop/NM2207/week8/R')
runApp("appname")
runApp("app name")
runApp("appname")
runApp("appname")
runApp('appname')
runApp('appname')
setwd("~/Desktop/NM2207/week8/week8 chanllenge/appname")
runApp()
install.packages(shiny)
library(shiny)
runExample("11_timer")
runApp()
runApp("app")
runApp()
install.packages(shiny)
library(shiny)
runExample("11_timer")
runApp()
runApp()
runApp()
install.packages(shiny)
library(shiny)
runExample("11_timer")
runApp()
runApp()
runApp()
runApp()
include_graphics("h2.png")
include_grphics("h2.png")
include_graphics("h2.png")
knitr::include_graphics("h2.png")
getwd()
knitr::include_graphics("h2.png")
setwd("~/Desktop/NM2207/week8/week8 chanllenge/appname")
knitr::include_graphics("h2.png")
setwd("~/Desktop/NM2207/week8")
runApp('week8 chanllenge/appname')
runApp('R')
knitr::include_graphics("h2.png")
knitr::include_graphics("h3.png")
